<Activity mc:Ignorable="sap sap2010" x:Class="_Service_Request_Form_Word_Document_Check_Boxes" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="o_Str_EmailAddress" Type="OutArgument(x:String)" />
    <x:Property Name="o_Str_AccessMeditech" Type="OutArgument(x:String)" />
    <x:Property Name="o_Str_AccessGeneral" Type="OutArgument(x:String)" />
    <x:Property Name="o_Str_AccessEmail" Type="OutArgument(x:String)" />
    <x:Property Name="o_FirstName" Type="OutArgument(x:String)" />
    <x:Property Name="o_Str_LastName" Type="OutArgument(x:String)" />
    <x:Property Name="o_Str_Fullname" Type="OutArgument(x:String)" />
    <x:Property Name="in_Str_ItFormRequestDoc" Type="InArgument(x:String)" />
    <x:Property Name="o_Str_DesktopService" Type="OutArgument(x:String)" />
    <x:Property Name="o_Str_MessagingService" Type="OutArgument(x:String)" />
    <x:Property Name="o_Str_ApplicationService" Type="OutArgument(x:String)" />
    <x:Property Name="o_Str_IntranetServices" Type="OutArgument(x:String)" />
    <x:Property Name="o_StrCustomerReport" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1332,6308.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="26">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Service Request Form Word Document Check Boxes " sap:VirtualizedContainerService.HintSize="486.4,1685.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="Int_Count_Hospitals" />
      <Variable x:TypeArguments="x:String" Name="Str_HospitalList" />
      <Variable x:TypeArguments="x:Boolean" Name="B_SecurityChk" />
      <Variable x:TypeArguments="x:String" Name="Str_AccessRemovalTxt" />
      <Variable x:TypeArguments="x:String" Name="Str_HospitalName" />
      <Variable x:TypeArguments="s:String[]" Name="Str_arSecurityQuestions" />
      <Variable x:TypeArguments="x:String" Name="Str_MeditechNew" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="464,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Starting&quot;]" />
    <Assign DisplayName="Assign-Access Generel" sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_39">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[o_Str_AccessGeneral]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[nothing]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign-Access Meditech" sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_40">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[o_Str_AccessMeditech]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[nothing]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign-Access Email" sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_41">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[o_Str_AccessEmail]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[nothing]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="Word Document Validation And Extraction Of Data" sap:VirtualizedContainerService.HintSize="464,52.8" sap2010:WorkflowViewState.IdRef="Sequence_19">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="B_ServiceFormExist" />
        <Variable x:TypeArguments="x:String" Name="Str_HospitalName" />
        <Variable x:TypeArguments="x:String" Name="Str_Security1" />
        <Variable x:TypeArguments="x:String" Name="Str_Security2" />
        <Variable x:TypeArguments="x:String" Name="Str_Security3" />
        <Variable x:TypeArguments="x:String" Name="Str_Security4" />
        <Variable x:TypeArguments="x:String" Name="Str_Security5" />
        <Variable x:TypeArguments="x:String" Name="Str_Security6" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign-Full Name" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_21">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[o_Str_Fullname]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("Full name")+"Full name".Length).Split(environment.NewLine.ToCharArray)(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_22">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_Security1]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("(MM/DD  year is not required)=")+"(MM/DD  year is not required)=".Length).Split(" ".ToCharArray)(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign-Email Address" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_23">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[o_Str_EmailAddress]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("Email Address ")+"Email Address ".Length).Split(environment.NewLine.ToCharArray)(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_24">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_Security2]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("Last 4 digits of social security#=")+"Last 4 digits of social security#=".Length).Split(" ".ToCharArray)(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_25">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_Security3]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("High School Name=")+"High School Name=".Length).Split(" ".ToCharArray)(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_26">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_Security4]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("Pet’s Name=")+"Pet’s Name=".Length).Split(" ".ToCharArray)(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_27">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_Security5]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("City Born=")+"City Born=".Length).Split(" ".ToCharArray)(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_28">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_Security6]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("Father’s middle name=")+"Father’s middle name=".Length).Split(environment.NewLine.ToCharArray)(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign- Security Questions" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_29">
        <Assign.To>
          <OutArgument x:TypeArguments="s:String[]">[Str_arSecurityQuestions]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:String[]">[{Str_Security1,Str_Security2,Str_Security3,Str_Security4,Str_Security5,Str_Security6}]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign- Security Check" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_30">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[B_SecurityChk]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
        </Assign.Value>
      </Assign>
      <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_34">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_AccessRemovalTxt]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String" xml:space="preserve">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("Access Removal Services   to remove access to applications and systems")+"Access Removal Services   to remove access to applications and systems".Length)]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Assign DisplayName="Assign-Hospital Name String" sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_18">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[Str_HospitalList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("Hospital")+"Hospital".Length).Split(environment.NewLine.ToCharArray)(0)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign-Count Of Hospital Checked" sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_19">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[Int_Count_Hospitals]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[system.Text.RegularExpressions.Regex.Matches(Str_HospitalList,"(1\s+[a-zA-Z]+)").Count]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[Int_Count_Hospitals.Equals(1)]" DisplayName="If-Count Of Hospital Checked More Than One " sap:VirtualizedContainerService.HintSize="464,52.8" sap2010:WorkflowViewState.IdRef="If_16">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="265.6,287.2" sap2010:WorkflowViewState.IdRef="Sequence_25">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign-Str Hospital Name" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_62">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Str_HospitalName]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[system.Text.RegularExpressions.Regex.Match(Str_HospitalList,"(1\s+[a-zA-Z]+)").Value.Replace("1"," ")]</InArgument>
            </Assign.Value>
          </Assign>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="243.2,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_16" Text="[system.Text.RegularExpressions.Regex.Match(Str_HospitalList,&quot;(1\s+[a-zA-Z]+)&quot;).Value]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Throw Exception="[new businessruleexception(&quot;Hospitals Got Checked More Than One or Zero&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_6" />
      </If.Else>
    </If>
    <Sequence DisplayName=" Access  New Request Form" sap:VirtualizedContainerService.HintSize="464,52.8" sap2010:WorkflowViewState.IdRef="Sequence_47">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="Str_GeneralNew_Chk" />
        <Variable x:TypeArguments="x:Boolean" Name="B_GeneralNewChk" />
        <Variable x:TypeArguments="x:Boolean" Name="B_MeditechNewChk" />
        <Variable x:TypeArguments="x:Boolean" Name="B_EmailNewChk" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign- General New Check" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_124">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[B_GeneralNewChk]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">[system.Text.RegularExpressions.Regex.IsMatch(in_Str_ItFormRequestDoc,"1\s+(Gen)+")]</InArgument>
        </Assign.Value>
      </Assign>
      <Sequence DisplayName="To Check MediTech New" sap:VirtualizedContainerService.HintSize="243.2,52.8" sap2010:WorkflowViewState.IdRef="Sequence_62">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Assign-Meditech New" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_125">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[Str_MeditechNew]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("only for medical staff and nursing"))]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign-Meditech New SubStr" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_126">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[Str_MeditechNew]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[Str_MeditechNew.Substring(0,Str_MeditechNew.LastIndexOf(" Email"))]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <Assign DisplayName="Assign-Meditech New Check" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_127">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[B_MeditechNewChk]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">[system.Text.RegularExpressions.Regex.IsMatch(Str_MeditechNew,"(1\s+(Meditech))")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign- Email New Check" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_128">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[B_EmailNewChk]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">[system.Text.RegularExpressions.Regex.IsMatch(in_Str_ItFormRequestDoc,"1\s+(Email)")]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[B_EmailNewChk or B_GeneralNewChk or B_MeditechNewChk]" DisplayName="If- Access Requested New" sap:VirtualizedContainerService.HintSize="243.2,52.8" sap2010:WorkflowViewState.IdRef="If_60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="265.6,748.8" sap2010:WorkflowViewState.IdRef="Sequence_63">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign-General Access LastName" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_100">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[o_Str_LastName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("Last Name*")+"Last Name* ".Length).Split(environment.NewLine.ToCharArray)(0)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign-General Access FirstName" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_101">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[o_FirstName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("First Name*")+"First Name*".Length).Split(environment.NewLine.ToCharArray)(0)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each- Security Questions" sap:VirtualizedContainerService.HintSize="243.2,52.8" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[Str_arSecurityQuestions]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="486.4,521.6" sap2010:WorkflowViewState.IdRef="Sequence_54">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[not string.IsNullOrWhiteSpace(item)]" DisplayName="If- Security question is not empty" sap:VirtualizedContainerService.HintSize="464,396.8" sap2010:WorkflowViewState.IdRef="If_54">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="265.6,247.2" sap2010:WorkflowViewState.IdRef="Sequence_53">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign- Security Check" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_102">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Boolean">[B_SecurityChk]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:Break sap:VirtualizedContainerService.HintSize="243.2,22.4" sap2010:WorkflowViewState.IdRef="Break_4" />
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <If Condition="[B_SecurityChk]" DisplayName="If-Security Question Answered atleast one" sap:VirtualizedContainerService.HintSize="243.2,52.8" sap2010:WorkflowViewState.IdRef="If_55">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Else>
                <Throw Exception="[new businessruleexception(&quot;No Security Questions Was Answred &quot;)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_17" />
              </If.Else>
            </If>
            <If Condition="[B_GeneralNewChk]" DisplayName="If-General New Checked" sap:VirtualizedContainerService.HintSize="243.2,52.8" sap2010:WorkflowViewState.IdRef="If_45">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="General New &amp; Modify" sap:VirtualizedContainerService.HintSize="265.6,377.6" sap2010:WorkflowViewState.IdRef="Sequence_46">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign-General New" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_94">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Str_GeneralNew_Chk]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("1 General Network"))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_95">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[Str_GeneralNew_Chk]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Str_GeneralNew_Chk.Substring(0,Str_GeneralNew_Chk.LastIndexOf("only for medical staff and nursing"))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[system.Text.RegularExpressions.Regex.IsMatch(Str_GeneralNew_Chk,&quot;1\s+(NEW)+&quot;)]" DisplayName="If- General New Got Checked " sap:VirtualizedContainerService.HintSize="243.2,52.8" sap2010:WorkflowViewState.IdRef="If_43">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Assign DisplayName="Assign-General New Access Checked" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_103">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[o_Str_AccessGeneral]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["General new"+Str_HospitalName]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <If Condition="[system.Text.RegularExpressions.Regex.IsMatch(Str_GeneralNew_Chk,&quot;1\s+(Modify)+&quot;)]" DisplayName="If- General Modify Got Checked " sap:VirtualizedContainerService.HintSize="468,209.6" sap2010:WorkflowViewState.IdRef="If_42">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Assign DisplayName="Assign-General Modify Access Checked" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_104">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[o_Str_AccessGeneral]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">["General modify"+Str_HospitalName]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Then>
                        <If.Else>
                          <Throw Exception="[new businessruleexception(&quot;General Got Checked But New or Modify Not Checked&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_14" />
                        </If.Else>
                      </If>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
            </If>
            <Sequence DisplayName="MediTech Access " sap:VirtualizedContainerService.HintSize="243.2,52.8" sap2010:WorkflowViewState.IdRef="Sequence_49">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[B_MeditechNewChk]" DisplayName="If-MediTech New Checked" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="If_49">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="General New &amp; Modify" sap:VirtualizedContainerService.HintSize="222.4,177.6" sap2010:WorkflowViewState.IdRef="Sequence_48">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If Condition="[system.Text.RegularExpressions.Regex.IsMatch(Str_MeditechNew,&quot;1\s+(NEW)+&quot;)]" DisplayName="If- General New Got Checked " sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="If_47">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Assign DisplayName="Assign-Access Meditech New" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_111">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[o_Str_AccessMeditech]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["Meditech new"+Str_HospitalName]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <If Condition="[system.Text.RegularExpressions.Regex.IsMatch(Str_MeditechNew,&quot;1\s+(Modify)+&quot;)]" DisplayName="If- General Modify Got Checked " sap:VirtualizedContainerService.HintSize="468,209.6" sap2010:WorkflowViewState.IdRef="If_46">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Assign DisplayName="Assign-Access Meditech Modify" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_112">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[o_Str_AccessMeditech]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["Meditech modify"+Str_HospitalName]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Throw Exception="[new businessruleexception(&quot;General Got Checked But New or Modify Not Checked&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_15" />
                          </If.Else>
                        </If>
                      </If.Else>
                    </If>
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
            <Sequence DisplayName="Email Access" sap:VirtualizedContainerService.HintSize="243.2,52.8" sap2010:WorkflowViewState.IdRef="Sequence_51">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="Str_EmailNewChk" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[B_EmailNewChk]" DisplayName="If- Email Access New Chkd" sap:VirtualizedContainerService.HintSize="883.2,833.6" sap2010:WorkflowViewState.IdRef="If_53">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="758.4,684" sap2010:WorkflowViewState.IdRef="Sequence_50">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign-Email Chk" sap:VirtualizedContainerService.HintSize="736,60" sap2010:WorkflowViewState.IdRef="Assign_98">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Str_EmailNewChk]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("1 Email"))]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign-Email Sub Str" sap:VirtualizedContainerService.HintSize="736,60" sap2010:WorkflowViewState.IdRef="Assign_99">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[Str_EmailNewChk]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[Str_EmailNewChk.Substring(0,Str_EmailNewChk.lastIndexOf("Detailed description of change:"))]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[system.Text.RegularExpressions.Regex.IsMatch(Str_EmailNewChk,&quot;1\s+(NEW)+&quot;)]" DisplayName="If- Email New Got Checked " sap:VirtualizedContainerService.HintSize="736,359.2" sap2010:WorkflowViewState.IdRef="If_51">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Assign DisplayName="Assign-Access New Email" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_119">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[o_Str_AccessEmail]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">["Email new"+Str_HospitalName]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Then>
                      <If.Else>
                        <If Condition="[system.Text.RegularExpressions.Regex.IsMatch(Str_EmailNewChk,&quot;1\s+(Modify)+&quot;)]" DisplayName="If-Email Modify Got Checked " sap:VirtualizedContainerService.HintSize="468,209.6" sap2010:WorkflowViewState.IdRef="If_50">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Assign DisplayName="Assign-Access Modify Email" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_120">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[o_Str_AccessEmail]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["Email modify"+Str_HospitalName]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Throw Exception="[new businessruleexception(&quot;Email Got Checked But New or Modify Not Checked&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_16" />
                          </If.Else>
                        </If>
                      </If.Else>
                    </If>
                  </Sequence>
                </If.Then>
              </If>
            </Sequence>
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName=" Access  Removal Request Form" sap:VirtualizedContainerService.HintSize="464,52.8" sap2010:WorkflowViewState.IdRef="Sequence_69">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="B_GeneralDelete" />
        <Variable x:TypeArguments="x:Boolean" Name="B_MediTechDelete" />
        <Variable x:TypeArguments="x:Boolean" Name="B_EmailDelete" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign-General Delete" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_129">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[B_GeneralDelete]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">[system.Text.RegularExpressions.Regex.IsMatch(in_Str_ItFormRequestDoc,"1(Gen)+")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign-MediTech Delete" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_130">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[B_MediTechDelete]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">[system.Text.RegularExpressions.Regex.IsMatch(in_Str_ItFormRequestDoc,"1(Meditech)")]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign-Email Delete" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_131">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Boolean">[B_EmailDelete]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Boolean">[system.Text.RegularExpressions.Regex.IsMatch(in_Str_ItFormRequestDoc,"1+(Email)")]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[B_EmailDelete or B_GeneralDelete or B_MediTechDelete]" DisplayName="If- Access Removal Got Checked" sap:VirtualizedContainerService.HintSize="243.2,52.8" sap2010:WorkflowViewState.IdRef="If_65">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="222.4,456" sap2010:WorkflowViewState.IdRef="Sequence_68">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[string.IsNullOrWhiteSpace(o_FirstName)]" DisplayName="If- Last Or First Name Is Empty" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="If_61">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="265.6,284.8" sap2010:WorkflowViewState.IdRef="Sequence_64">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign-General Access LastName" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_132">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[o_Str_LastName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Str_AccessRemovalTxt.Substring(Str_AccessRemovalTxt.IndexOf("Last Name")+"Last Name".Length).Split(environment.NewLine.ToCharArray)(0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign-General Access FirstName" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_133">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[o_FirstName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[Str_AccessRemovalTxt.Substring(Str_AccessRemovalTxt.IndexOf("First Name")+"First Name".Length).Split(environment.NewLine.ToCharArray)(0)]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[B_GeneralDelete]" DisplayName="If- General Delete Got Checked" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="If_62">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="265.6,184.8" sap2010:WorkflowViewState.IdRef="Sequence_65">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign-Removal Genreral-Disable" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_134">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[o_Str_AccessGeneral]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["Delete General"+Str_HospitalName]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[B_MediTechDelete]" DisplayName="If- MediTech Delete Got Checked" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="If_63">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="265.6,184.8" sap2010:WorkflowViewState.IdRef="Sequence_66">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign-Removal Meditech" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_135">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[o_Str_AccessMeditech]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["Delete Meditech"+Str_HospitalName]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
            <If Condition="[B_EmailDelete]" DisplayName="If- Email Delete Got Checked" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="If_64">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="265.6,184.8" sap2010:WorkflowViewState.IdRef="Sequence_67">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign-Disable Email " sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_136">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[o_Str_AccessEmail]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">["Delete Email"+Str_HospitalName]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName="Desktop Services" sap:VirtualizedContainerService.HintSize="464,52.8" sap2010:WorkflowViewState.IdRef="Sequence_30">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="Str_DeskTopServices" />
        <Variable x:TypeArguments="x:String" Name="Str_DeskTopSummary" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign-DeskTop Services" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_75">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_DeskTopServices]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("Desktop Service")+"Desktop Service".Length).Split(environment.NewLine.ToCharArray)(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign-Desktop Summary" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_76">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_DeskTopSummary]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Str_DeskTopServices.Substring(Str_DeskTopServices.IndexOf("Summary:")+"Summary:".Length).Split(environment.NewLine.ToCharArray)(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[Not string.IsNullOrWhiteSpace(Str_DeskTopSummary)]" DisplayName="If- Desktop Summary Contains A Text" sap:VirtualizedContainerService.HintSize="243.2,52.8" sap2010:WorkflowViewState.IdRef="If_30">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Assign DisplayName="Assign-Desktop Services" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_77">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[o_Str_DesktopService]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["Desktop"+Str_HospitalName]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName="Messaging Services" sap:VirtualizedContainerService.HintSize="464,52.8" sap2010:WorkflowViewState.IdRef="Sequence_31">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="Str_MessagingServices" />
        <Variable x:TypeArguments="x:String" Name="Str_MessagingSummary" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign-Messaging Services" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_78">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_MessagingServices]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("Messaging")+"Messaging".Length).Split(environment.NewLine.ToCharArray)(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign-Messaging Summary" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_79">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_MessagingSummary]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Str_MessagingServices.Substring(Str_MessagingServices.IndexOf("Summary:")+"Summary:".Length).Split(environment.NewLine.ToCharArray)(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[Not string.IsNullOrWhiteSpace(Str_MessagingSummary)]" DisplayName="If- Messaging Summary Contains A Text" sap:VirtualizedContainerService.HintSize="243.2,52.8" sap2010:WorkflowViewState.IdRef="If_31">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Assign DisplayName="Assign-Messaging Services" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_84">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[o_Str_MessagingService]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["Messaging"+Str_HospitalName]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName="Application Services" sap:VirtualizedContainerService.HintSize="464,52.8" sap2010:WorkflowViewState.IdRef="Sequence_32">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="Str_ApplicationServices" />
        <Variable x:TypeArguments="x:String" Name="Str_ApplicationSummary" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign-Application Services" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_80">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_ApplicationServices]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("Application Services for routine requests for your Meditech system")+"Application Services for routine requests for your Meditech system".Length).Split(environment.NewLine.ToCharArray)(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign-Application Summary" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_81">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_ApplicationSummary]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Str_ApplicationServices.Substring(Str_ApplicationServices.IndexOf("Summary:")+"Summary:".Length).Split(environment.NewLine.ToCharArray)(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[Not string.IsNullOrWhiteSpace(Str_ApplicationSummary)]" DisplayName="If- Application Summary Contains A Text" sap:VirtualizedContainerService.HintSize="243.2,52.8" sap2010:WorkflowViewState.IdRef="If_32">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Assign DisplayName="Assign-Application Services" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_85">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[o_Str_ApplicationService]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["Application"+Str_HospitalName]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName="Intranet Services" sap:VirtualizedContainerService.HintSize="464,52.8" sap2010:WorkflowViewState.IdRef="Sequence_33">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="Str_IntranetServices" />
        <Variable x:TypeArguments="x:String" Name="Str_IntranetSummary" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign-Intranet Services" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_82">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_IntranetServices]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("Intranet Services requests to modify the hospital intranet")+"Intranet Services requests to modify the hospital intranet".Length).Split(environment.NewLine.ToCharArray)(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign-Intranet Summary" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_83">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_IntranetSummary]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Str_IntranetServices.Substring(Str_IntranetServices.IndexOf("Summary:")+"Summary:".Length).Split(environment.NewLine.ToCharArray)(0)]</InArgument>
        </Assign.Value>
      </Assign>
      <If Condition="[Not string.IsNullOrWhiteSpace(Str_IntranetSummary)]" DisplayName="If- Intranet Summary Contains A Text" sap:VirtualizedContainerService.HintSize="243.2,52.8" sap2010:WorkflowViewState.IdRef="If_33">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Assign DisplayName="Assign-Intranet Services" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_86">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[o_Str_IntranetServices]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["Intranet"+Str_HospitalName]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
      </If>
    </Sequence>
    <Sequence DisplayName="Customer Report Request" sap:VirtualizedContainerService.HintSize="464,52.8" sap2010:WorkflowViewState.IdRef="Sequence_35">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="Str_CustomerRevise" />
        <Variable x:TypeArguments="x:Boolean" Name="B_CustomerReviseChk" />
        <Variable x:TypeArguments="x:String" Name="Str_CustomerReportRequester" />
        <Variable x:TypeArguments="x:Boolean" Name="B_CustomerRequester" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign- Customer Report Revise Check" sap:VirtualizedContainerService.HintSize="754.4,60" sap2010:WorkflowViewState.IdRef="Assign_87">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[Str_CustomerRevise]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("Custom Report Request:")+"Custom Report Request:".Length).Split(environment.NewLine.ToCharArray)(2)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:IsMatch DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="754.4,22.4" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[Str_CustomerRevise]" Pattern="^1" RegexOption="IgnoreCase, Compiled" Result="[B_CustomerReviseChk]" />
      <If Condition="[B_CustomerReviseChk]" DisplayName="If-Customer Report Revise Chkd" sap:VirtualizedContainerService.HintSize="754.4,646.4" sap2010:WorkflowViewState.IdRef="If_35">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Assign DisplayName="Assign-Customer Revise" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_88">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[o_StrCustomerReport]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">["Report Revise"+Str_HospitalName]</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="486.4,496.8" sap2010:WorkflowViewState.IdRef="Sequence_34">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Assign-Customer Report Requester" sap:VirtualizedContainerService.HintSize="464,60" sap2010:WorkflowViewState.IdRef="Assign_89">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[Str_CustomerReportRequester]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_Str_ItFormRequestDoc.Substring(in_Str_ItFormRequestDoc.IndexOf("or report will the changes be validated against?")+"or report will the changes be validated against?".Length).Split(environment.NewLine.ToCharArray)(3)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:IsMatch DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="464,22.4" sap2010:WorkflowViewState.IdRef="IsMatch_2" Input="[Str_CustomerReportRequester]" Pattern="^1" RegexOption="IgnoreCase, Compiled" Result="[B_CustomerRequester]" />
            <If Condition="[B_CustomerRequester]" DisplayName="If-Customer Report New Chkd" sap:VirtualizedContainerService.HintSize="464,209.6" sap2010:WorkflowViewState.IdRef="If_34">
              <If.Then>
                <Assign DisplayName="Assign-Customer Revise" sap:VirtualizedContainerService.HintSize="243.2,60" sap2010:WorkflowViewState.IdRef="Assign_90">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[o_StrCustomerReport]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Report New"+Str_HospitalName]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
            </If>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="464,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Ending&quot;]" />
  </Sequence>
</Activity>